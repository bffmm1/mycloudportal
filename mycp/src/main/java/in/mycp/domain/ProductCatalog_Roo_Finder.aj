// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package in.mycp.domain;

import in.mycp.domain.Infra;
import in.mycp.domain.ProductCatalog;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect ProductCatalog_Roo_Finder {
    
    public static TypedQuery<ProductCatalog> ProductCatalog.findProductCatalogsByInfra(Infra infra) {
        if (infra == null) throw new IllegalArgumentException("The infra argument is required");
        EntityManager em = ProductCatalog.entityManager();
        TypedQuery<ProductCatalog> q = em.createQuery("SELECT o FROM ProductCatalog AS o WHERE o.infra = :infra", ProductCatalog.class);
        q.setParameter("infra", infra);
        return q;
    }
    
    public static TypedQuery<ProductCatalog> ProductCatalog.findProductCatalogsByNameEquals(String name) {
        if (name == null || name.length() == 0) throw new IllegalArgumentException("The name argument is required");
        EntityManager em = ProductCatalog.entityManager();
        TypedQuery<ProductCatalog> q = em.createQuery("SELECT o FROM ProductCatalog AS o WHERE o.name = :name", ProductCatalog.class);
        q.setParameter("name", name);
        return q;
    }
    
    public static TypedQuery<ProductCatalog> ProductCatalog.findProductCatalogsByProductTypeEquals(String productType) {
        if (productType == null || productType.length() == 0) throw new IllegalArgumentException("The productType argument is required");
        EntityManager em = ProductCatalog.entityManager();
        TypedQuery<ProductCatalog> q = em.createQuery("SELECT o FROM ProductCatalog AS o WHERE o.productType = :productType", ProductCatalog.class);
        q.setParameter("productType", productType);
        return q;
    }
    
}
