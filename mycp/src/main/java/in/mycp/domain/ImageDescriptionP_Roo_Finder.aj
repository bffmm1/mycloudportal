// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package in.mycp.domain;

import in.mycp.domain.Asset;
import in.mycp.domain.ImageDescriptionP;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect ImageDescriptionP_Roo_Finder {
    
    public static TypedQuery<ImageDescriptionP> ImageDescriptionP.findImageDescriptionPsByAsset(Asset asset) {
        if (asset == null) throw new IllegalArgumentException("The asset argument is required");
        EntityManager em = ImageDescriptionP.entityManager();
        TypedQuery<ImageDescriptionP> q = em.createQuery("SELECT o FROM ImageDescriptionP AS o WHERE o.asset = :asset", ImageDescriptionP.class);
        q.setParameter("asset", asset);
        return q;
    }
    
    public static TypedQuery<ImageDescriptionP> ImageDescriptionP.findImageDescriptionPsByImageIdEquals(String imageId) {
        if (imageId == null || imageId.length() == 0) throw new IllegalArgumentException("The imageId argument is required");
        EntityManager em = ImageDescriptionP.entityManager();
        TypedQuery<ImageDescriptionP> q = em.createQuery("SELECT o FROM ImageDescriptionP AS o WHERE o.imageId = :imageId", ImageDescriptionP.class);
        q.setParameter("imageId", imageId);
        return q;
    }
    
}
